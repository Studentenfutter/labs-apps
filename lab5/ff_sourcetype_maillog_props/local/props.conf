# NOTE: The name of this application is org_all_app_props - this assumes
#        the application log files are the same across all departments.
#        If each department has their own format you should name the application
#        org_dept_app_props like the coordinating _inputs configuration bundle.

# This is a basic props.conf for an application log file.

# APPLICATION NAME

# These configs are provided as a sample. The usual site-specific tweaks
# would lie within the TIME_PREFIX, and TIME_FORMAT.

[email_log]
TIME_PREFIX = ^
MAX_TIMESTAMP_LOOKAHEAD = 18
TZ = GMT
# A performance tweak is to disable SHOULD_LINEMERGE and then set the
# LINE_BREAKER to "line ending characters coming before a new time stamp"
# (note the direct link of the TIME_FORMAT to the regex of LINE_BREAKER).
TIME_FORMAT = %b %d %H:%M:%S
LINE_BREAKER = ([\r\n]+)\w{3}\s\d{2}\s\d{2}:\d{2}:\d{2}
SHOULD_LINEMERGE = False
# 10000 is default, should be set on a case by case basis
TRUNCATE = 10000

# If the data does not have nice key=value pairs, (or some other readily
# machine parseable format, like JSON or XML), set KV_MODE = none so that
# Splunk doesn't spin its wheels on attempting to look for key = value
# pairs which don't exist.
KV_MODE = auto

# Leaving PUNCT enabled can impact indexing performance. Customers can
# comment this line if they need to use PUNCT (e.g. security use cases)
ANNOTATE_PUNCT = false

# CUSTOM FIELD-EXTRACTIONS > maybe use Transforms
EXTRACT-pid = sm-mta\[(?<pid>\d{5})\]
EXTRACT-qid = sm-mta\[\d{5}\]:\s+(?<qid>\w{14})
EXTRACT-milter_action = Milter:\s+data,\s+(?<milter_action>discard)
EXTRACT-spam_pct = Probability=(?<spam_pct>\d+)%,

# Syntax:
#     * replace - s/regex/replacement/flags
#       * regex is a perl regular expression (optionally containing capturing
#         groups).
#       * replacement is a string to replace the regex match. Use \n for back
#         references, where "n" is a single digit.
#       * flags can be either: g to replace all matches, or a number to
#         replace a specified match.
#     * substitute - y/string1/string2/
#       * substitutes the string1[i] with string2[i]
# * No default.
SEDCMD-removebrackets =s/[<>]//g
